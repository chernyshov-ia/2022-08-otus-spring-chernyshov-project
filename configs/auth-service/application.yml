application:
  jwt:
    token-count-limit: 3
    access-token-lifetime-seconds: 3600
    refresh-token-lifetime-days: 30
    secret:
      access: "{cipher}faa58bd74c24525535b74651a61a715445e29b33e57a04d14e879865b4d8844b1c7f671660ba182ab2f11b95daef0e5f4295c4b3d40f72f8a5445b1f7fa37084df92389b33f30a0b809a0f73977fc14779b89bce9dba56e0ae51f6b4f35ef393072f308c78a15ff95282c8c3156352b3"
      refresh: "{cipher}eef8f639f70a0769e8e93d4024cbd5a28a5177035f2d73b6610e8bd6cf88ea109306a504a505fa4b45f161851e11e3ec91b00881d516c0efc61f97a81c2c68d44dc1e746d1ead9df3382c3a1ddf113606c5cdd773b4a21210b3d070bf62a379e966235ecb3d87f23e26fb8fa778917ea"

server:
  port: 8081
spring:
  flyway:
    enabled: true
  datasource:
    url: "jdbc:postgresql://localhost:5432/auth"
    password: "{cipher}3e26fb500892ec6cb6255292beb47a1d393a905b5a2d557492ff857dabfed74b"
    username: "{cipher}3e26fb500892ec6cb6255292beb47a1d393a905b5a2d557492ff857dabfed74b"
  jpa:
    generate-ddl: false
    show-sql: true
    hibernate:
      ddl-auto: validate
    open-in-view: false

logging:
  file:
    name: "auth.log"
  level:
    org.springframework.web: TRACE

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    logfile:
      external-file: "auth.log"
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true

resilience4j.circuitbreaker:
  instances:
    authServiceCircuitBreaker:
      register-health-indicator: true
      failure-rate-threshold: 50
      minimum-number-of-calls: 5
      automatic-transition-from-open-to-half-open-enabled: true
      wait-duration-in-open-state: 5s
      permitted-number-of-calls-in-half-open-state: 3
      sliding-window-size: 10
      sliding-window-type: count_based
      ignoreExceptions:
        - ru.chia2k.auth.exception.AuthException

resilience4j.timelimiter:
  metrics:
    enabled: true
  instances:
    authServiceTimeLimiter:
      register-health-indicator: true
      timeout-duration: 2s
      cancel-running-future: true

resilience4j.bulkhead:
  metrics:
    enabled: true
  instances:
    authServiceBulkhead:
      register-health-indicator: true
      max-concurrent-calls: 4
      max-wait-duration: 1

resilience4j.ratelimiter:
  metrics:
    enabled: true
  instances:
    authServiceRateLimiter:
      register-health-indicator: true
      limit-for-period: 5
      limit-refresh-period: 60s
      timeout-duration: 0s
      allow-health-indicator-to-fail: true
      subscribe-for-events: true
      event-consumer-buffer-size: 50

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8888/eureka
    register-with-eureka: true
    fetch-registry: false
  instance:
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true