server:
  port: 8000

spring:
  main:
    web-application-type: reactive
  jmx:
    enabled: false
  cloud:
    gateway:
      routes:
        - id: route_auth_token
          uri: lb://auth-service
          predicates:
            - Method=POST
            - Path=/api/auth/login,/api/auth/token,/api/auth/refresh
          filters:
            - RewritePath=/api/auth/?(?<segment>.*), /api/v1/$\{segment}
        - id: route_auth_token_check
          uri: lb://auth-service
          predicates:
            - Method=GET
            - Path=/api/auth/check
          filters:
            - SetPath=/api/v1/check
        - id: route_logistics
          uri: lb://logistics-service
          predicates:
            - Method=GET
            - Path=/api/address/**,/api/cargocategory/**,/api/parcel/**
          filters:
            - RewritePath=/api/address(?<segment>/?.*), /api/v1/address$\{segment}
            - RewritePath=/api/cargocategory(?<segment>/?.*), /api/v1/cargoCategory$\{segment}
            - RewritePath=/api/parcel(?<segment>/?.*), /api/v1/parcel$\{segment}
        - id: route_barcodes
          uri: lb://logistics-service
          predicates:
            - Method=GET
            - Path=/api/barcode
          filters:
            - RewritePath=/api/barcode, /barcode
        - id: route_vnp
          uri: lb://vnp-service
          predicates:
            - Method=GET,POST,DELETE
            - Path=/api/packvolume/**,/api/order/**
          filters:
            - RewritePath=/api/packvolume(?<segment>/?.*), /api/v1/packVolume$\{segment}
            - RewritePath=/api/order(?<segment>/?.*), /api/v1/order$\{segment}

logging:
  file:
    name: "gateway.log"
  level:
    org.springframework.cloud.gateway: TRACE
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.ipc.netty: DEBUG
    reactor.netty: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"
      cors:
        allowed-origins: "*"
  endpoint:
    health:
      show-details: always
    logfile:
      external-file: "gateway.log"
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true


eureka:
  client:
    service-url:
      defaultZone: http://localhost:8888/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true
